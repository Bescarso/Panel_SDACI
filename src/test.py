import socket
import pyodbc

# Par√°metros de conexi√≥n
SERVER = "localhost"  # o "localhost\\SQLEXPRESS"
PORT = 1433           # puerto t√≠pico de SQL Server
DATABASE = "SDACI"
USERNAME = "sa"
PASSWORD = "Blacksuede123*"

def check_sql_service(server, port):
    print(f"üîç Probando conexi√≥n al puerto {port} en {server}...")
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.settimeout(3)
    try:
        sock.connect((server, port))
        print("‚úÖ Puerto abierto: SQL Server est√° escuchando en la red.")
        return True
    except socket.error as e:
        print(f"‚ùå No se puede conectar al puerto {port} en {server}: {e}")
        return False
    finally:
        sock.close()

def test_pyodbc_connection():
    print("üîç Probando conexi√≥n con pyodbc...")
    try:
        conn = pyodbc.connect(
            f"DRIVER={{ODBC Driver 17 for SQL Server}};"
            f"SERVER={SERVER},{PORT};"
            f"DATABASE={DATABASE};"
            "Encrypt=no;"
            f"UID={USERNAME};"
            f"PWD={PASSWORD};",
            timeout=5
        )
        print("‚úÖ Conexi√≥n a SQL Server exitosa con pyodbc.")
        conn.close()
    except pyodbc.InterfaceError as e:
        print("‚ùå Error de interfaz ODBC (posible driver incorrecto o no instalado):", e)
    except pyodbc.OperationalError as e:
        print("‚ùå Error de conexi√≥n (credenciales, base de datos o configuraci√≥n de SQL Server):", e)

if __name__ == "__main__":
    if check_sql_service(SERVER, PORT):
        test_pyodbc_connection()


check_sql_service(SERVER, PORT)
test_pyodbc_connection()